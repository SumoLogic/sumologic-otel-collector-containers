name: Publish release

run-name: >
  ${{ format('Publish Release for Workflow: {0}', inputs.workflow_id) }}

on:
  workflow_dispatch:
    inputs:
      workflow_id:
        description: |
          Workflow Run ID from this repository to fetch artifacts from for this
          release.
        required: true
        type: string

defaults:
  run:
    shell: bash

jobs:
  get-version:
    name: Get application version info for this revision
    runs-on: ubuntu-24.04
    outputs:
      git-sha: ${{ steps.get-version.outputs.git-sha }}
      otc-version: ${{ steps.set-versions.outputs.otc_version }}
      otc-build-number: ${{ steps.set-versions.outputs.otc_build_number }}
      otc-sumo-version: ${{ steps.set-versions.outputs.otc_sumo_version }}
      package-version: ${{ steps.set-versions.outputs.package_version }}
      binary-version: ${{ steps.set-versions.outputs.binary_version }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Outuput Workflow ID
        run: echo ::notice title=Workflow ID::${{ inputs.workflow_id }}

      - name: Output Workflow URL
        run: |
          repo_url="https://github.com/SumoLogic/sumologic-otel-collector-packaging"
          url="${repo_url}/actions/runs/${{ inputs.workflow_id }}"
          echo ::notice title=Workflow URL::${url}

      - name: Download version artifacts from workflow
        uses: actions/download-artifact@v4
        with:
          pattern: "*.txt"
          path: artifacts/
          merge-multiple: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ inputs.workflow_id }}

      - name: Set version outputs
        id: set-versions
        run: |
          otc_version="$(cat artifacts/otc-version.txt)"
          otc_build_number="$(cat artifacts/otc-build-number.txt)"
          otc_sumo_version="$(cat artifacts/otc-sumo-version.txt)"
          echo otc_version="${otc_version}" >> $GITHUB_OUTPUT
          echo otc_build_number="${otc_build_number}" >> $GITHUB_OUTPUT
          echo otc_sumo_version="${otc_sumo_version}" >> $GITHUB_OUTPUT
          echo package_version="${otc_version}-${otc_build_number}" >> $GITHUB_OUTPUT
          echo binary_version="${otc_version}-sumo-${otc_sumo_version}" >> $GITHUB_OUTPUT

      - name: Output OTC Version
        run: |
          version="${{ steps.set-versions.outputs.otc_version }}"
          echo ::notice title=OTC Version::${version}

      - name: Output OTC Build Number
        run: |
          version="${{ steps.set-versions.outputs.otc_build_number }}"
          echo ::notice title=OTC Build Number::${version}

      - name: Output OTC Sumo Version
        run: |
          version=${{ steps.set-version.outputs.otc_sumo_version }}
          echo ::notice title=OTC Sumo Version::${version}

      - name: Determine Git SHA of workflow
        id: get-sha
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          workflow=${{ inputs.workflow_id }}
          sha="$(gh run view ${workflow} --json headSha -t '{{.headSha}}')"
          echo "git-sha=$sha" >> $GITHUB_OUTPUT

      - name: Output Git SHA
        run: |
          echo ::notice title=Git SHA::${{ steps.get-sha.outputs.git-sha }}

  promote-container-images:
    name: Build container
    runs-on: ubuntu-24.04
    needs:
      - get-version
    strategy:
      matrix:
        platform: ["linux_amd64", "linux_arm64"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Show Buildx platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to ECR (Private)
        uses: docker/login-action@v3
        with:
          registry: 663229565520.dkr.ecr.us-east-1.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to ECR (Public)
        uses: docker/login-action@v3
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Download platform otelcol-sumo artifacts from workflow
        uses: actions/download-artifact@v4
        with:
          pattern: otelcol-sumo-${{ matrix.platform }}
          path: artifacts/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ inputs.workflow_id }}

      - name: Download platform fips otelcol-sumo artifacts from workflow
        uses: actions/download-artifact@v4
        with:
          pattern: otelcol-sumo-fips-${{ matrix.platform }}
          path: artifacts/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ inputs.workflow_id }}

  create-release:
    name: Create Github release
    runs-on: ubuntu-24.04
    needs:
      - get-version
    permissions:
      contents: write
    steps:
      - name: Download all artifacts from workflow
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          merge-multiple: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ inputs.workflow_id }}

      - name: List all artifacts
        run: ls -l artifacts/

      - uses: ncipollo/release-action@v1
        with:
          name: v${{ needs.get-version.outputs.package-version }}
          commit: ${{ needs.get-version.outputs.git-sha }}
          tag: v${{ needs.get-version.outputs.package-version }}

          draft: true
          generateReleaseNotes: true
          prerelease: false

          allowUpdates: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true

          artifacts: "artifacts/*"
          artifactErrorsFailBuild: true
          replacesArtifacts: false

          body: |
            This release produces container images using Sumo Logic Distributions for OpenTelemetry Collector [${{ needs.get-version.outputs.binary-version }}](https://github.com/SumoLogic/sumologic-otel-collector/releases/tag/v${{ needs.get-version.outputs.binary-version }}).

            The changelog below is for the container images themselves, rather than the Sumo Logic Distribution for OpenTelemetry Collector. The changelog for the Sumo Logic Distribution for OpenTelemetry Collector can be found on the collector's [release page](https://github.com/SumoLogic/sumologic-otel-collector/releases/tag/v${{ needs.get-version.outputs.binary-version }}).

            ### Container images:

            ```
            docker pull public.ecr.aws/sumologic/sumologic-otel-collector:${{ needs.get-version.outputs.version }}
            ```
